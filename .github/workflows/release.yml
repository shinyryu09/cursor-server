name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Build application
      run: npm run build
    
    - name: Create release archive
      run: |
        mkdir -p release
        cp -r server.js package.json package-lock.json README.md manage-service.sh release/
        tar -czf cursor-server-${GITHUB_REF_NAME}.tar.gz -C release .
        zip -r cursor-server-${GITHUB_REF_NAME}.zip release/
    
    - name: Generate changelog
      run: |
        echo "# Changelog" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "## ${GITHUB_REF_NAME} ($(date +%Y-%m-%d))" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### Features" >> CHANGELOG.md
        echo "- Cursor Server with Xcode Code Intelligence integration" >> CHANGELOG.md
        echo "- Fast response model (cursor-cli-fast)" >> CHANGELOG.md
        echo "- Response caching system" >> CHANGELOG.md
        echo "- Workspace auto-detection" >> CHANGELOG.md
        echo "- Real-time task tracking" >> CHANGELOG.md
        echo "- Web dashboard" >> CHANGELOG.md
        echo "- macOS launchd service configuration" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### Improvements" >> CHANGELOG.md
        echo "- Optimized response times" >> CHANGELOG.md
        echo "- Enhanced error handling" >> CHANGELOG.md
        echo "- Better logging and monitoring" >> CHANGELOG.md
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false
    
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./cursor-server-${{ github.ref_name }}.tar.gz
        asset_name: cursor-server-${{ github.ref_name }}.tar.gz
        asset_content_type: application/gzip
    
    - name: Upload Release Assets (ZIP)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./cursor-server-${{ github.ref_name }}.zip
        asset_name: cursor-server-${{ github.ref_name }}.zip
        asset_content_type: application/zip